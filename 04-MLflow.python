{"version":"NotebookV1","origId":17385972,"name":"04-MLflow","language":"python","commands":[{"version":"CommandV1","origId":17385973,"guid":"642f1386-071c-4990-b947-d854de68f61e","subtype":"command","commandType":"auto","position":1.0,"command":"\n%md-sandbox\n\n<div style=\"text-align: center; line-height: 0; padding-top: 9px;\">\n  <img src=\"https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png\" alt=\"Databricks Learning\" style=\"width: 600px; height: 163px\">\n</div>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031147,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"035b1eed-24a8-4d99-8d1b-01ea7e2ef1d3"},{"version":"CommandV1","origId":17385974,"guid":"08e4e1b7-e68c-4ff0-b210-dfc96ad04b8a","subtype":"command","commandType":"auto","position":2.0,"command":"%md\n# MLflow\n\n[MLflow](https://mlflow.org/docs/latest/concepts.html) seeks to address these three core issues:\n\n* It’s difficult to keep track of experiments\n* It’s difficult to reproduce code\n* There’s no standard way to package and deploy models\n\nIn the past, when examining a problem, you would have to manually keep track of the many models you created, as well as their associated parameters and metrics. This can quickly become tedious and take up valuable time, which is where MLflow comes in.\n\n## ![Spark Logo Tiny](https://files.training.databricks.com/images/105/logo_spark_tiny.png) In this lesson you:<br>\n* Use MLflow to track experiments, log metrics, and compare runs\n\n**Required Libraries**: \n* `mlflow==1.2.0` via PyPI","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031158,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c006c81d-3bed-4128-9384-66fc0277c061"},{"version":"CommandV1","origId":17385975,"guid":"7e5ca0cd-8693-43c1-a79f-e904fe24fa90","subtype":"command","commandType":"auto","position":3.0,"command":"%md-sandbox\n<div><img src=\"https://files.training.databricks.com/images/eLearning/ML-Part-4/mlflow-tracking.png\" style=\"height: 400px; margin: 20px\"/></div>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031165,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"917e4afe-c9da-449a-a845-24b5ad9459cd"},{"version":"CommandV1","origId":17385976,"guid":"6eb713d0-37bf-4e86-873d-e4d7172361af","subtype":"command","commandType":"auto","position":4.0,"command":"%run \"./Includes/Classroom-Setup\"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031173,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a36d0899-9b6c-42db-9dcb-ec622ca32d39"},{"version":"CommandV1","origId":17385977,"guid":"f0406134-744d-4b70-9c37-1d84256f16cd","subtype":"command","commandType":"auto","position":5.0,"command":"%md\nLet's start by loading in our SF Airbnb Dataset.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031182,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c91ce6ba-c089-4bf0-945a-c7f052def0c6"},{"version":"CommandV1","origId":17385978,"guid":"30c951b8-0568-4c72-9292-60df0bb53e60","subtype":"command","commandType":"auto","position":6.0,"command":"%python\nfilePath = \"dbfs:/mnt/training/airbnb/sf-listings/sf-listings-2019-03-06-clean.parquet/\"\nairbnbDF = spark.read.parquet(filePath)\n\n(trainDF, testDF) = airbnbDF.randomSplit([.8, .2], seed=42)\nprint(trainDF.cache().count())","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031188,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"c91b4e40-4d95-4d06-84bf-a49093b28e21"},{"version":"CommandV1","origId":17385979,"guid":"0d701e9b-01b4-44b2-98ed-5d7c03dc3851","subtype":"command","commandType":"auto","position":7.0,"command":"%md\n### MLflow Tracking\n\nMLflow Tracking is a logging API specific for machine learning and agnostic to libraries and environments that do the training.  It is organized around the concept of **runs**, which are executions of data science code.  Runs are aggregated into **experiments** where many runs can be a part of a given experiment and an MLflow server can host many experiments.\n\n\nMLflow tracking also serves as a **model registry** so tracked models can easily be stored and, as necessary, deployed into production. This also standardizes this process, which significantly accelerates it and allows for scalability. Experiments can be tracked using libraries in Python, R, and Java as well as by using the CLI and REST calls.  This module will use Python, though the majority of MLflow functionality is also exposed in these other APIs.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031190,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"06c450a3-5483-4f77-b569-d91253fb2f60"},{"version":"CommandV1","origId":17385980,"guid":"dff598f4-b1c4-4351-ba99-0be98fbe1df8","subtype":"command","commandType":"auto","position":8.0,"command":"%md\n### Track Runs\n\nEach run can record the following information:<br><br>\n\n- **Parameters:** Key-value pairs of input parameters such as the number of trees in a random forest model\n- **Metrics:** Evaluation metrics such as RMSE or Area Under the ROC Curve\n- **Artifacts:** Arbitrary output files in any format.  This can include images, pickled models, and data files\n- **Source:** The code that originally ran the experiment\n\n**NOTE**: MLflow can only log PipelineModels.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031196,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"a4fd7208-3000-490f-bcf3-ba367713d9ec"},{"version":"CommandV1","origId":17385981,"guid":"7ccb9190-ec9e-4cc2-b9cb-6f6d8688addc","subtype":"command","commandType":"auto","position":9.0,"command":"%python\nimport mlflow\nimport mlflow.spark\nfrom pyspark.ml.regression import LinearRegression\nfrom pyspark.ml.feature import VectorAssembler\nfrom pyspark.ml import Pipeline\nfrom pyspark.ml.evaluation import RegressionEvaluator\n\n#mlflow.set_experiment(f\"/Users/{username}/Webinar/mlflow\")\n\nwith mlflow.start_run(run_name=\"LR-Single-Feature\") as run:\n  # Define pipeline\n  vecAssembler = VectorAssembler(inputCols=[\"bedrooms\"], outputCol=\"features\")\n  lr = LinearRegression(featuresCol=\"features\", labelCol=\"price\")\n  pipeline = Pipeline(stages=[vecAssembler, lr])\n  pipelineModel = pipeline.fit(trainDF)\n  \n  # Log parameters\n  mlflow.log_param(\"label\", \"price-bedrooms\")\n  \n  # Log model\n  mlflow.spark.log_model(pipelineModel, \"model\")\n  \n  # Evaluate predictions\n  predDF = pipelineModel.transform(testDF)\n  regressionEvaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price\", metricName=\"rmse\")\n  rmse = regressionEvaluator.evaluate(predDF)\n  \n  # Log metrics\n  mlflow.log_metric(\"rmse\", rmse)\n\n# display_run_uri(run.info.experiment_id, run.info.run_id)","commandVersion":4,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031201,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"6e6087c2-4418-4c96-8f91-91e58d14bc94"},{"version":"CommandV1","origId":17385982,"guid":"725b47fb-816f-4175-8661-4274329f77f6","subtype":"command","commandType":"auto","position":10.0,"command":"%md\nThere, all done! Let's go through the other two linear regression models and then compare our runs. Does anyone remember the RMSE of the other runs?\n\nNext let's build our linear regression model but use all of our features.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031202,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b227924d-08f4-4b20-819a-d0bbcc8f7ca2"},{"version":"CommandV1","origId":17385983,"guid":"570cc151-f2c4-4fc1-8af1-2124abf0d3c1","subtype":"command","commandType":"auto","position":11.0,"command":"%python\nfrom pyspark.ml.feature import RFormula\nwith mlflow.start_run(run_name=\"LR-All-Features\") as run:\n  # Create pipeline\n  rFormula = RFormula(formula=\"price ~ .\", featuresCol=\"features\", labelCol=\"price\", handleInvalid=\"skip\")\n  lr = LinearRegression(labelCol=\"price\", featuresCol=\"features\")\n  pipeline = Pipeline(stages = [rFormula, lr])\n  pipelineModel = pipeline.fit(trainDF)\n  \n  # Log pipeline\n  mlflow.spark.log_model(pipelineModel, \"model\")\n  \n  # Log parameter\n  mlflow.log_param(\"label\", \"price-all-features\")\n  \n  # Create predictions and metrics\n  predDF = pipelineModel.transform(testDF)\n  regressionEvaluator = RegressionEvaluator(labelCol=\"price\", predictionCol=\"prediction\")\n  rmse = regressionEvaluator.setMetricName(\"rmse\").evaluate(predDF)\n  r2 = regressionEvaluator.setMetricName(\"r2\").evaluate(predDF)\n  \n  # Log both metrics\n  mlflow.log_metric(\"rmse\", rmse)\n  mlflow.log_metric(\"r2\", r2)\n\n# display_run_uri(run.info.experiment_id, run.info.run_id)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031207,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5bb5609d-d38f-4c8a-a17d-8db7a57d5776"},{"version":"CommandV1","origId":17385984,"guid":"c9887b30-2a71-47ba-8404-bf949536d2e2","subtype":"command","commandType":"auto","position":12.0,"command":"%md\nFinally, we will use Linear Regression to predict the log of the price, due to its log normal distribution.\n\nWe'll also practice logging artifacts to keep a visual of our log normal histogram.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031209,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"1e8b8678-6c05-4cff-84b9-a26dc86166b8"},{"version":"CommandV1","origId":17385985,"guid":"9c29dee4-05a4-45ba-820e-1c5ca046a8c6","subtype":"command","commandType":"auto","position":13.0,"command":"%python\nfrom pyspark.ml.feature import RFormula\nfrom pyspark.sql.functions import col, log, exp\nimport matplotlib.pyplot as plt\n\nwith mlflow.start_run(run_name=\"LR-Log-Price\") as run:\n  # Take log of price\n  logTrainDF = trainDF.withColumn(\"log_price\", log(col(\"price\")))\n  logTestDF = testDF.withColumn(\"log_price\", log(col(\"price\")))\n  \n  # Log parameter\n  mlflow.log_param(\"label\", \"log-price\")\n  \n  # Create pipeline\n  rFormula = RFormula(formula=\"log_price ~ . - price\", featuresCol=\"features\", labelCol=\"log_price\", handleInvalid=\"skip\")  \n  lr = LinearRegression(labelCol=\"log_price\", predictionCol=\"log_prediction\")\n  pipeline = Pipeline(stages = [rFormula, lr])\n  pipelineModel = pipeline.fit(logTrainDF)\n  \n  # Log model\n  mlflow.spark.log_model(pipelineModel, \"log-model\")\n  \n  # Make predictions\n  predDF = pipelineModel.transform(logTestDF)\n  expDF = predDF.withColumn(\"prediction\", exp(col(\"log_prediction\")))\n  \n  # Evaluate predictions\n  rmse = regressionEvaluator.setMetricName(\"rmse\").evaluate(expDF)\n  r2 = regressionEvaluator.setMetricName(\"r2\").evaluate(expDF)\n  \n  # Log metrics\n  mlflow.log_metric(\"rmse\", rmse)\n  mlflow.log_metric(\"r2\", r2)\n  \n  # Log artifact\n  plt.clf()\n  logTrainDF.toPandas().hist(column=\"log_price\", bins=100)\n  figPath = username + \"logNormal.png\" \n  plt.savefig(figPath)\n  mlflow.log_artifact(figPath)\n  display(plt.show())\n  \n# display_run_uri(run.info.experiment_id, run.info.run_id)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031216,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"48c31d21-30b5-4f2a-9be9-2f7b3bc32f6b"},{"version":"CommandV1","origId":17385986,"guid":"37243350-8ff8-4733-af89-16bb71051a98","subtype":"command","commandType":"auto","position":14.0,"command":"%md\nThat's it! Now, let's use MLflow to easily look over our work and compare model performance. You can either query past runs programmatically or use the MLflow UI.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031217,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"df43007d-a7d6-4a5e-92f8-267c9f49f2f0"},{"version":"CommandV1","origId":17385987,"guid":"e8bf19c6-3fea-4fe8-b3b3-cbaf9dba350b","subtype":"command","commandType":"auto","position":15.0,"command":"%md\n### Querying Past Runs\n\nYou can query past runs programatically in order to use this data back in Python.  The pathway to doing this is an `MlflowClient` object. ","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031222,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5b82c4fc-f960-4dec-8936-d81d92a23416"},{"version":"CommandV1","origId":17385988,"guid":"2104490f-a5a5-4ec6-9e3c-54d5b27b0a83","subtype":"command","commandType":"auto","position":16.0,"command":"%python\nfrom mlflow.tracking import MlflowClient\n\nclient = MlflowClient()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031228,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bc3b3828-c591-4264-b5bc-8ec7de104d3a"},{"version":"CommandV1","origId":17385989,"guid":"1bc0b639-70a8-47eb-a108-4de626d2e992","subtype":"command","commandType":"auto","position":17.0,"command":"%python\nclient.list_experiments()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031229,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"8d81f313-635e-47d9-9fbb-b296d98fb4c5"},{"version":"CommandV1","origId":17385990,"guid":"3dfc11cb-b118-41ee-80ad-48d760fef2a3","subtype":"command","commandType":"auto","position":18.0,"command":"%md\nYou can also use [search_runs](https://mlflow.org/docs/latest/search-syntax.html) to find all runs for a given experiment.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031231,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"bb9315ac-ffc1-45fc-ad10-f04d90fcb404"},{"version":"CommandV1","origId":17385991,"guid":"c38bf883-50b6-4f0a-b37c-32c5cc864a30","subtype":"command","commandType":"auto","position":19.0,"command":"%python\nexperiment_id = run.info.experiment_id\nruns_df = mlflow.search_runs(experiment_id)\n\ndisplay(runs_df)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031236,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"7b891bb6-4963-4c88-a3e3-fa183c1ebec4"},{"version":"CommandV1","origId":17385992,"guid":"e559966e-1ec1-42c6-a5d8-5106be9c3364","subtype":"command","commandType":"auto","position":20.0,"command":"%md\nPull the last run and look at metrics.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031237,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"4ddfd310-60cc-4833-a9c8-e195f60da3ba"},{"version":"CommandV1","origId":17385993,"guid":"5a0d0405-c93e-4d7f-beca-31158d522f7d","subtype":"command","commandType":"auto","position":21.0,"command":"%python\nruns = client.search_runs(experiment_id, order_by=[\"attributes.start_time desc\"], max_results=1)\nruns[0].data.metrics","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031242,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"9e421d82-5903-441c-8bcb-1086e74b9763"},{"version":"CommandV1","origId":17385994,"guid":"24148061-d2fb-41d9-a421-2e59ed86f00a","subtype":"command","commandType":"auto","position":22.0,"command":"%python\nrun_id = runs[0].info.run_id\n# display_run_uri(run.info.experiment_id, run_id)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031243,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"5b4fef34-8da5-47f9-b474-4d587d23b8d2"},{"version":"CommandV1","origId":17385995,"guid":"fefbcda4-1b1b-4348-a22c-6e7caa58347e","subtype":"command","commandType":"auto","position":23.0,"command":"%md-sandbox\nExamine the results in the UI.  Look for the following:<br><br>\n\n1. The `Experiment ID`\n2. The artifact location.  This is where the artifacts are stored in DBFS.\n3. The time the run was executed.  **Click this to see more information on the run.**\n4. The code that executed the run.\n\n\nAfter clicking on the time of the run, take a look at the following:<br><br>\n\n1. The Run ID will match what we printed above\n2. The model that we saved, included a pickled version of the model as well as the Conda environment and the `MLmodel` file.\n\nNote that you can add notes under the \"Notes\" tab to help keep track of important information about your models. \n\nAlso, click on the run for the log normal distribution and see that the histogram is saved in \"Artifacts\".","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031244,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"536d7491-2146-4e1c-9a33-55a7407e894e"},{"version":"CommandV1","origId":17385996,"guid":"fafc049b-9ef0-4810-94dc-5085dfcffd0e","subtype":"command","commandType":"auto","position":24.0,"command":"%md\n### Load Saved Model\n\nLet's practice [loading](https://www.mlflow.org/docs/latest/python_api/mlflow.spark.html) our logged log-normal model.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031253,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"fc2db6e4-0258-4424-9956-057cdf903010"},{"version":"CommandV1","origId":17385997,"guid":"7ff79094-70f3-4a2a-803f-4f03334ab776","subtype":"command","commandType":"auto","position":25.0,"command":"%python\nrun_id = run.info.run_id\n\nloaded_model = mlflow.spark.load_model(f\"dbfs:/databricks/mlflow/{experiment_id}/{run_id}/artifacts/log-model\")\ndisplay(loaded_model.transform(testDF))","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031260,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"97c7c1f2-fa02-43e4-beb4-ea640df193dc"},{"version":"CommandV1","origId":17385998,"guid":"f55f90a5-0579-4a13-8ad2-3957af117256","subtype":"command","commandType":"auto","position":26.0,"command":"%md\n## Log Param, Metrics, and Artifacts\n\nNow it's your turn! Log your name, your height, and a fun [matplotlib visualization](https://matplotlib.org/3.1.0/gallery/lines_bars_and_markers/scatter_with_legend.html#sphx-glr-gallery-lines-bars-and-markers-scatter-with-legend-py) (by calling the `generate_plot` function below - feel free to modify the viz!) under a run with name `MLflow-Lab` in our new MLflow experiment.","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031261,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"251971b1-a949-4d7e-a518-399ba6f88bc2"},{"version":"CommandV1","origId":17385999,"guid":"6b19465a-5f1b-452f-9a7a-32ebd32e02e3","subtype":"command","commandType":"auto","position":27.0,"command":"%python\ndef generate_plot():\n  import numpy as np\n  np.random.seed(19680801)\n  import matplotlib.pyplot as plt\n\n  fig, ax = plt.subplots()\n  for color in ['tab:blue', 'tab:orange', 'tab:green']:\n      n = 750\n      x, y = np.random.rand(2, n)\n      scale = 200.0 * np.random.rand(n)\n      ax.scatter(x, y, c=color, s=scale, label=color,\n                 alpha=0.3, edgecolors='none')\n\n  ax.legend()\n  ax.grid(True)\n#   display(plt.show())\n  return fig, plt\n\ngenerate_plot()","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031266,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e169e620-9bd2-4cb3-8a62-62159d3f4612"},{"version":"CommandV1","origId":17386000,"guid":"0d4d7777-d7b1-4fba-86b1-db01f7ea5616","subtype":"command","commandType":"auto","position":28.0,"command":"%python\n# ANSWER\nwith mlflow.start_run(run_name=\"MLflow-Lab\") as run:\n  # Log your name (parameter)\n  mlflow.log_param(\"name\", \"brooke\")\n  \n  # Log your height (metric)\n  mlflow.log_metric(\"height\", 1.7)\n  \n  # Log a matplotlib viz\n  fig, plt = generate_plot()\n  outdir = userhome.replace(\"dbfs:\", \"/dbfs\")\n  figPath =  outdir + \"/plot.png\" \n  fig.savefig(figPath)\n  mlflow.log_artifact(figPath)\n  display(fig)\n  \n  runID = run.info.run_id\n  print(f\"Inside MLflow Run with id {runID}\")\n  \n# display_run_uri(run.info.experiment_id, run.info.run_id)","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031267,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"2afc3496-ac36-4505-90d9-240f3249164e"},{"version":"CommandV1","origId":17386001,"guid":"66b50b02-b0a2-4a13-b19e-9cb8f2c17114","subtype":"command","commandType":"auto","position":29.0,"command":"%md\n## Additional Resources\n\n**Q:** What is MLflow at a high level?  \n**A:** <a href=\"https://databricks.com/session/accelerating-the-machine-learning-lifecycle-with-mlflow-1-0\" target=\"_blank\">Listen to Spark and MLflow creator Matei Zaharia's talk at Spark Summit in 2019.</a>\n\n**Q:** Where can I find the MLflow docs?  \n**A:** <a href=\"https://www.mlflow.org/docs/latest/index.html\" target=\"_blank\">You can find the docs here.</a>\n","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031268,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b183f824-9815-4026-8274-9b238e8b1aba"},{"version":"CommandV1","origId":17386002,"guid":"ea50ab83-6399-4fb1-a149-d50d20459ab3","subtype":"command","commandType":"auto","position":30.0,"command":"%md-sandbox\n&copy; 2019 Databricks, Inc. All rights reserved.<br/>\nApache, Apache Spark, Spark and the Spark logo are trademarks of the <a href=\"http://www.apache.org/\">Apache Software Foundation</a>.<br/>\n<br/>\n<a href=\"https://databricks.com/privacy-policy\">Privacy Policy</a> | <a href=\"https://databricks.com/terms-of-use\">Terms of Use</a> | <a href=\"http://help.databricks.com/\">Support</a>","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":1587015031273,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"useConsistentColors":false,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"doug.bateman@databricks.com","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"isLockedInExamMode":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"05889bc2-2100-4703-a3fd-7c4daebdec30"}],"dashboards":[],"guid":"ac04f8ee-3d31-4056-a047-5e20ad19d978","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}